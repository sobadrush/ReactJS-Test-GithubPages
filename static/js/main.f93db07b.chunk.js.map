{"version":3,"sources":["logo.svg","assets/img/componentDidMount.png","assets/img/componentDidMount001.png","assets/img/componentDidMount002.png","assets/img/ReactJS-生命週期2.png","assets/img/煉獄大哥.png","assets/img/getDerivedStateFromProps.png","assets/img/卡通林克.png","my-components/MyProgressBar/MyProgressBar.js","my-components/MyComponent/MyComponent.js","my-components/MyComponentUseClass/MyComponentUseClass.js","my-components/MyComponentWithUseState/MyComponentWithUseState.js","my-components/MyHttpApiComponent/MyHttpApiComponent.js","my-components/MyComponentLifecycle/MyComponentLifecycle.js","my-components/MyComponentLifecycle/MyComponentLifecycle2.js","my-components/MyComponentLifecycle/MyComponentLifecycle3.js","my-components/MyComponentLifecycle/MyComponentLifecycle4.js","my-components/MyComponentLifecycle/MyComponentLifecycle5.js","utils/events.js","my-components/ComponentCommunicate/ChildA.js","my-components/ComponentCommunicate/ChildB.js","my-components/ComponentCommunicate/Parent.js","my-components/MyComponentOOXX/Board.js","my-components/ComponentProgressDIY/ProgressDIY.js","my-components/ProductListComponent/MyProductList.js","my-components/MyRouterTestComponent/About.js","my-components/MyRouterTestComponent/UserInfo.js","my-components/MyRouterTestComponent/NoMatch.js","my-components/MyRouterTestComponent/RouterView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Progress","style","border","className","backgroundColor","width","height","borderRadius","MyComponent","props","console","log","color","myName","type","onClick","handleClick","children","MyComponentUseClass","empName","changeEmpName","bind","changePercent","state","myPercent","alert","this","event","target","value","setState","margin","defaultValue","onKeyUp","Component","MyComponentWithUseState","useState","percent","e","MyHttpApiComponent","generateTableRow","bookList","length","rows","i","push","key","id","title","author","clearTable","undefined","render","doFetchBookData","map","perData","fetch","method","then","res","json","cbData","catch","error","MyComponentLifecycle","isMale","isShowPic","result","src","require","alt","MyComponentLifecycle2","doFetchData","isServerResponsed","doDelay","setTimeout","document","querySelector","innerHTML","func","secs","myTitle","myDetail001","myDetail002","marginBottom","colSpan","item","index","MyComponentLifecycle3","timer1","getNowDateTime","doEnlarge","doShrinkage","nowDateTime","scalePercent","clearInterval","setInterval","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","href","lifecycleImg","onMouseEnter","onMouseLeave","MyComponentLifecycle4","doRotate","inputChangedHandler","doRotadoRotateRangeBarte","doRotateRangeBar","rotateAng","prevProps","prevState","snapshot","nextProps","nextState","angAfterRotate","parseInt","onChange","marginLeft","min","max","step","MyComponentLifecycle5","salary","setSalary","setNowDateTime","useEffect","checkSalary","msg","readOnly","doChangeSalary","EventEmitter","ChildA","handlerEmitToParent","emitToParent","empData","eventEmitter","emitter","addListener","messageObj","message","removeListener","JSON","stringify","msgObjFromChildB","React","ChildB","changeSiblingChildA","_msg","msgObj","emit","placeholder","Parent","handleChildEmitData","dataFromChild","empAge","empSalary","lianyu","Square","doClick","iconToChange","icon","handleClickFromParent","squareIndex","passFromParentVal","textAlign","display","alignItems","justifyContent","Board","_valFromChild","squareIndexFromChild","squareStatus","currentPlayer","nextPlayer","Array","fill","valFromChild","ProgressDIY","increaseRate","_targetRate","rateVal","timerIdIncrease","decreaseRate","timerIddecrease","clearTimeout","myrate","getAttribute","MyProductList","doDelete","_pId","window","confirm","productsAfterRemoved","products","filter","prodVO","pId","doInsert","inputObj","handleChange","name","maxProdId","Math","vo","price","inventory","cols","scope","About","UserInfo","match","when","NoMatch","RouterView","generateRandomNumber","floor","random","toString","padStart","doNavigateToPage","history","randNum","to","activeClassName","activeStyle","path","component","exact","from","withRouter","myStyle","fontSize","doLogConsole2","printMessage","App","isEnter","setIsEnter","isShowComponent5","setIsShowComponent5","btnArr","myMultiButton","logo","myNumber","getData","rel","borderTop","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f93db07b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/componentDidMount.f20db685.png\";","module.exports = __webpack_public_path__ + \"static/media/componentDidMount001.842e235a.png\";","module.exports = __webpack_public_path__ + \"static/media/componentDidMount002.148f946f.png\";","module.exports = __webpack_public_path__ + \"static/media/ReactJS-生命週期2.09f698c7.png\";","module.exports = __webpack_public_path__ + \"static/media/煉獄大哥.eedd94ad.png\";","module.exports = __webpack_public_path__ + \"static/media/getDerivedStateFromProps.093b664b.png\";","module.exports = __webpack_public_path__ + \"static/media/卡通林克.42a8b106.png\";","import React from 'react';\r\nimport './MyProgressBar.css'\r\n\r\nfunction Progress() {\r\n  const barWidth = \"50%\";\r\n  return (\r\n    <div style={{border: '3px solid white'}}>\r\n      <h2>我是MyProgressBar</h2>\r\n      <div className=\"progress-back my-margin\" style={{ backgroundColor: \"rgba(0,0,0,0.2)\", width: \"200px\", height: \"7px\", borderRadius: \"10px\" }}>\r\n        <div className=\"progress-bar\" style={{ backgroundColor: \"#fe5196\", width: barWidth, height: \"100%\", borderRadius: \"10px\" }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Progress;\r\n","import React from 'react';\r\nimport \"./MyComponent.css\"\r\n\r\nfunction MyComponent(props) {\r\n  return (\r\n    <div style={{border: '3px solid white'}}>\r\n       <h2>我是MyComponent</h2>\r\n\r\n       {console.log(\"元件中的 props is : \", props)}\r\n\r\n       <h1 style={{color: 'yellow'}}>{ props.myName }</h1> \r\n\r\n    <button type=\"button\" className=\"btn btn-danger my-margin\" onClick={ props.handleClick }>\r\n      測試綁定函式（<span style={{color: \"lightgreen\"}}>{ props.children }</span>）\r\n    </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;\r\n","import React, { Component } from 'react';\r\nimport './MyComponentUseClass.css'\r\n\r\nclass MyComponentUseClass extends Component { // 繼承Component類別\r\n\r\n    constructor(props) { // 加入建構子以及props參數\r\n        super(props);\r\n        console.log('MyComponentUseClass props >>> ', props);\r\n        //-------------------------------------------------------------------------\r\n        this.empName = `Roger`;\r\n        //-------------------------------------------------------------------------\r\n        this.changeEmpName = this.changeEmpName.bind(this); // 自訂function綁定至自己\r\n        this.changePercent = this.changePercent.bind(this); // 自訂function綁定至自己\r\n        //-------------------------------------------------------------------------\r\n        this.state = { // 宣告state物件，內包含一個變數percent\r\n            myPercent: \"30%\"\r\n        }\r\n    }\r\n\r\n    // 自訂function\r\n    changeEmpName() {\r\n        alert(\">>> 觸發changeEmpName (但執行完後this.empName沒變) <<<\")\r\n        this.empName = `Roger - Be Changed`;\r\n    }\r\n\r\n    // 自訂function\r\n    changePercent(event) {\r\n        console.log(\" >>> changePercent <<< \");\r\n        console.log(\" >>> changePercent event.target.value <<< \", event.target.value);\r\n        // (1)state這個變數是read-only的，我們並 不能 用 this.state.變數=值, 直接修改state，\r\n        // 而是必須要透過React預寫好的函式setState()來更改。(註:跟使用其他函式一樣，前面要加上this)\r\n        // (2) setState() 中「存在但沒有被寫到的state」不會被移除，不存在的state會被建立。\r\n        // (3) 移除state: 設成undefined ex: this.setState({mounted: undefined});\r\n        // (4) 對於state中的物件不能只修改單一屬性\r\n        //     this.setState({ \r\n        //         styleData:{\r\n        //             width: \"70%\",\r\n        //             height: this.state.styleData.height // 保留height屬性\r\n        //         } \r\n        //     });\r\n        // (ref.) https://ithelp.ithome.com.tw/articles/10219561\r\n\r\n        // this.setState({ myPercent: `${event.target.value}%` });\r\n        this.setState({ myPercent: `${event.target.value}%` }, () => {\r\n            console.log(`測試setState第2個參數, 當state被設定完之後，就會執行。我們可以利用這個參數來作想在state改變後的事情`);\r\n        });\r\n    }\r\n\r\n    // HTML部分\r\n    render() {\r\n        return (\r\n            <div style={{ border: '3px solid white', margin: '1cm' }}>\r\n                <h2>MyComponentUseClass</h2>\r\n                <h3>使用ES6 class建立的component</h3>\r\n                <button type=\"button\" onClick={this.changeEmpName}>click ({ this.empName })</button>\r\n\r\n                <br />\r\n                <p>Default range slider:</p>\r\n\r\n\r\n                輸入%數: <input type=\"text\" style={{ width: '20%' }} defaultValue={ this.state.myPercent } onKeyUp={ this.changePercent }></input>\r\n\r\n                <br />\r\n                我是進度條\r\n                <div className=\"progress-back\" style={{ margin: '10px auto', backgroundColor: \"rgba(255,255,255,0.2)\", width: \"70%\", height: \"15px\", borderRadius: \"5px\" }}>\r\n                    <div className=\"progress-bar\" style={{ backgroundColor: \"RGB(0, 255, 0)\", width: this.state.myPercent, height: \"15px\", borderRadius: \"5px\" }}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MyComponentUseClass;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport \"./MyComponentWithUseState.css\"\r\n\r\nfunction MyComponentWithUseState(props) {\r\n\r\n  console.log('MyComponentWithUseState props.myName >>>', props.myName);\r\n\r\n  const [empName, changeEmpName] = useState(\"Roger\");\r\n  const [percent, changePercent] = useState(\"30%\");\r\n\r\n  return (\r\n    <div style={{ border: '3px solid white', margin: '1cm' }}>\r\n      <h2>MyComponentWithUseState</h2>\r\n      <h3>使用function component 搭配 useState</h3>\r\n      <button type=\"button\" onClick={ () => { changeEmpName('Roger - Be Changed') } }>click ({empName})</button>\r\n\r\n      <br />\r\n      <p>Default range slider:</p>\r\n\r\n      輸入%數: <input type=\"text\" style={{ width: '20%' }} onKeyUp={(e) => changePercent(e.target.value + '%')}></input>\r\n\r\n      <br />\r\n      我是進度條\r\n      <div className=\"progress-back\" style={{ margin: '10px auto', backgroundColor: \"rgba(255,255,255,0.2)\", width: \"70%\", height: \"15px\", borderRadius: \"5px\" }}>\r\n        <div className=\"progress-bar\" style={{ backgroundColor: \"RGB(0, 255, 0)\", width: percent, height: \"15px\", borderRadius: \"5px\" }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponentWithUseState;\r\n","import React, { Component } from 'react';\r\n\r\nclass MyHttpApiComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"MyHttpApiComponent props >>> \", props);\r\n        // ------------------------------------------------------\r\n        this.bookList = []; // init, 也可以\r\n        // ------------------------------------------------------\r\n        this.doFetchBookData = this.doFetchBookData.bind(this); // 自訂function綁定至自己\r\n        this.generateTableRow = this.generateTableRow.bind(this); // 自訂function綁定至自己\r\n    }\r\n\r\n    // 自訂函式\r\n    doFetchBookData() {\r\n        let bookApiUrl = `http://localhost:3001/books`;\r\n        fetch(bookApiUrl, { method: \"GET\" })\r\n            .then(res => res.json())\r\n            .then(cbData => {\r\n                console.log(\"cbData >>>\", cbData);\r\n                this.setState({ bookList: cbData });\r\n            })\r\n            .catch(e => {\r\n                /*發生錯誤時要做的事情*/\r\n                console.error(e);\r\n            })\r\n    }\r\n\r\n    generateTableRow = () => {\r\n        let bookList = this.state?.bookList;\r\n        console.log(\"bookList?.length >>> \" , bookList?.length);\r\n\r\n        let rows = [];\r\n        // bookList?.map( x => \r\n        //     rows.push(<tr><td>{ x.id }</td><td>{ x.title }</td><td>{ x.author }</td></tr>)\r\n        // )\r\n        \r\n        for (let i = 0; i < bookList?.length; i++) {\r\n            rows.push(\r\n                <tr key={i}>\r\n                    <td>{ bookList[i].id }</td>\r\n                    <td>{ bookList[i].title }</td>\r\n                    <td>{ bookList[i].author }</td>\r\n                </tr>\r\n            );\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    clearTable = () => {\r\n        alert(\"========= clearTable =========\");\r\n        this.setState({ bookList: undefined });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div style={{ border: \"3px solid white\" }}>\r\n                <h2>MyHttpApiComponent</h2>\r\n                <button type=\"button\" className=\"btn btn-danger my-margin\" onClick={this.doFetchBookData}>點我查db.json的資料</button>\r\n                <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={this.clearTable}>清空TABLE</button>\r\n                <table className=\"table table-hover\" style={ {color: 'orange'} }>\r\n                    <tbody>\r\n                        {console.log(\"@@\", this.state?.bookList)}\r\n                        {   \r\n                            // 可如此用map render (ref. https://stackoverflow.com/questions/25646502/how-can-i-render-repeating-react-elements)\r\n                            this.state?.bookList?.map((perData, i) => \r\n                                <tr key={i}>\r\n                                    <td>{perData.id}</td>\r\n                                    <td>{perData.title}</td>\r\n                                    <td>{perData.author}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n\r\n                        {/* 也可如此 */}\r\n                        {/* { this.generateTableRow() } */}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyHttpApiComponent;","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nexport default class MyComponentLifecycle extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isMale: true,\r\n            isShowPic: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        console.log(\"getDerivedStateFromProps.props >>>\", props);\r\n        console.log(\"getDerivedStateFromProps.state >>>\", state);\r\n        if (props.myName === \"靜香\") {\r\n            return { isMale: false, isShowPic: false };\r\n        } else {\r\n            return { isMale: true, isShowPic: true };\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let result = null;\r\n        if (this.state.isMale === true) {\r\n            result = <h3 style={{ color: \"red\" }}>{this.props.myName} is : 男生</h3>;\r\n        } else {\r\n            result = <h3 style={{ color: \"orange\" }}>{this.props.myName} is : 女生</h3>;\r\n        }\r\n\r\n        let isShowPic = this.state.isShowPic;\r\n\r\n        return (\r\n            <div style={{ border: '3px solid white' }}>\r\n                <h1>我是MyComponentLifecycle</h1>\r\n\r\n                <img src={isShowPic === true ? require('../../assets/img/getDerivedStateFromProps.png') : ''} alt=\"getDerivedStateFromProps.png\"></img>\r\n\r\n                {/* {console.log(123)} */}\r\n                { result}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport myTitle from '../../assets/img/componentDidMount.png';\r\nimport myDetail001 from '../../assets/img/componentDidMount001.png';\r\nimport myDetail002 from '../../assets/img/componentDidMount002.png';\r\n\r\nexport default class MyComponentLifecycle2 extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isServerResponsed: false, // 初始值 - Server尚未回應\r\n            bookList: undefined\r\n        }\r\n\r\n        // 綁定自訂function\r\n        this.doFetchData = this.doFetchData.bind(this);\r\n        this.doDelay = this.doDelay.bind(this);\r\n    }\r\n\r\n    /**\r\n     * 生命週期\r\n     * constructor() -> static getDerivedStateFromProps() -> render() -> 渲染DOM -> componentDidMount()\r\n     * \r\n     * 假使一定要用jQuery操作DOM，大部份的人也是建議在componentDidMount中使用比較好，其中之一的原因也是因為這點\r\n     */\r\n    componentDidMount() {\r\n        console.log(\" >>> MyComponentLifecycle2 componentDidMount <<< \")\r\n\r\n        setTimeout(() => {\r\n            document.querySelector(\"#msg\").style.color = \"LightCoral\";\r\n            document.querySelector(\"#msg\").innerHTML = \"我是改變後的MSG\";\r\n        }, 1500);\r\n\r\n\r\n        // this.doFetchData();\r\n        this.doDelay(this.doFetchData, 2000);\r\n    }\r\n\r\n    // 自訂函式\r\n    doDelay(func, secs) {\r\n        setTimeout(func, secs);\r\n    }\r\n\r\n    // 自訂函式\r\n    doFetchData = () => {\r\n        console.log(\" >>> MyComponentLifecycle2 doFetchData <<<\");\r\n        let bookApiUrl = `http://localhost:3001/books`;\r\n        fetch(bookApiUrl, { method: \"GET\" })\r\n            .then(res => res.json())\r\n            .then(cbData => {\r\n                console.log(\"MyComponentLifecycle2 cbData >>>\", cbData);\r\n                this.setState({\r\n                    isServerResponsed: true,\r\n                    bookList: cbData\r\n                });\r\n            })\r\n            .catch(e => {\r\n                /*發生錯誤時要做的事情*/\r\n                console.error(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>我是MyComponentLifecycle2</h1>\r\n                <img src={myTitle} alt=\"componentDidMount.png\"></img>\r\n                <br /><br />\r\n                <img src={myDetail001} alt=\"componentDidMount001.png\"></img>\r\n                <br /><br />\r\n                <img src={myDetail002} alt=\"componentDidMount002.png\"></img>\r\n                <h5 id=\"msg\" style={{ color: \"lightgreen\", margin: \"2cm\" }}>我是初始MAG</h5>\r\n\r\n                {/* ------------------------------------ */}\r\n\r\n                <table className=\"table table-hover table-striped\" style={{ marginBottom: '2cm' }}>\r\n                    <thead>\r\n                        <tr style={{ backgroundColor: 'lightblue' }}>\r\n                            <th>id</th>\r\n                            <th>title</th>\r\n                            <th>author</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{ backgroundColor: 'lightgray' }}>\r\n                        {/* Inline If 與 && 邏輯運算子 */}\r\n                        {/* ref. https://zh-hant.reactjs.org/docs/conditional-rendering.html */}\r\n\r\n                        {\r\n                            this.state.isServerResponsed === false &&\r\n                            <tr><td colSpan=\"3\">...Data is Loading...</td></tr>\r\n                        }\r\n\r\n                        {\r\n                            this.state.isServerResponsed === true &&\r\n                            // 可如此用map render (ref. https://stackoverflow.com/questions/25646502/how-can-i-render-repeating-react-elements)\r\n                            this.state.bookList?.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.title}</td>\r\n                                        <td>{item.author}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport lifecycleImg from '../../assets/img/ReactJS-生命週期2.png';\r\n\r\nexport default class MyComponentLifecycle3 extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // ---------------------------------------------------\r\n        this.timer1 = null;\r\n        // ---------------------------------------------------\r\n        this.getNowDateTime = this.getNowDateTime.bind(this);\r\n        this.doEnlarge = this.doEnlarge.bind(this);\r\n        this.doShrinkage = this.doShrinkage.bind(this);\r\n        // ---------------------------------------------------\r\n        this.state = {\r\n            nowDateTime: undefined,\r\n            scalePercent: 60\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 生命週期\r\n     * constructor() -> static getDerivedStateFromProps() -> render() -> 渲染DOM -> componentDidMount()\r\n     * \r\n     * 假使一定要用jQuery操作DOM，大部份的人也是建議在componentDidMount中使用比較好，其中之一的原因也是因為這點\r\n     */\r\n    componentDidMount() {\r\n        console.log(\" >>> MyComponentLifecycle3 componentDidMount <<< \");\r\n        this.getNowDateTime();\r\n    }\r\n\r\n    // 最常被用來移除 componentDidMount 中「只想要隨著元件新增的一切東西」\r\n    componentWillUnmount() {\r\n        console.log(\" >>> MyComponentLifecycle3 componentWillUnmount <<< \");\r\n\r\n        // 若不取消註冊\r\n        // memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\r\n        clearInterval(this.timer1);\r\n    }\r\n\r\n    getNowDateTime() {\r\n        this.timer1 = setInterval(() => {\r\n            let today = new Date();\r\n            let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n            let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            this.setState({ nowDateTime: date + ' ' + time });\r\n        }, 1000);\r\n    }\r\n\r\n    doEnlarge() {\r\n        this.setState({\r\n            nowDateTime: this.state.nowDateTime,\r\n            scalePercent: this.state.scalePercent * 1.3\r\n        });\r\n    }\r\n\r\n    doShrinkage(){\r\n        this.setState((state, props) => {\r\n            // console.log(\"state >>> \" , state);\r\n            // console.log(\"props >>> \" , props);\r\n            return {\r\n                nowDateTime: state.nowDateTime,\r\n                scalePercent: state.scalePercent / 1.3\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <a href=\"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\"># ReactJS 元件生命週期圖(各版本)</a>\r\n                <br/>\r\n                <img src={lifecycleImg} alt=\"lifecycleImg.png\" width={this.state.scalePercent + '%'} \r\n                    onMouseEnter={this.doEnlarge} onMouseLeave={this.doShrinkage}></img>\r\n                <h1>我是MyComponentLifecycle3</h1>\r\n                <p>componentWillUnmount - 最常被用來移除 componentDidMount 中「只想要隨著元件新增的一切東西」</p>\r\n                <h2>{this.state.nowDateTime}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport './MyComponentLifecycle4.css';\r\n\r\nexport default class MyComponentLifecycle4 extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // ---------------------------------------------------\r\n        this.timer1 = null;\r\n        // ---------------------------------------------------\r\n        this.doRotate = this.doRotate.bind(this);\r\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\r\n        this.doRotadoRotateRangeBarte = this.doRotateRangeBar.bind(this);\r\n        // ---------------------------------------------------\r\n        this.state = {\r\n            rotateAng: 0,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 生命週期\r\n     * constructor() -> static getDerivedStateFromProps() -> render() -> 渲染DOM -> componentDidMount()\r\n     * \r\n     * 假使一定要用jQuery操作DOM，大部份的人也是建議在componentDidMount中使用比較好，其中之一的原因也是因為這點\r\n     */\r\n    componentDidMount() {\r\n        console.log(\" >>> MyComponentLifecycle4 componentDidMount <<< \");\r\n    }\r\n\r\n    // 最常被用來移除 componentDidMount 中「只想要隨著元件新增的一切東西」\r\n    componentWillUnmount() {\r\n        console.log(\" >>> MyComponentLifecycle4 componentWillUnmount <<< \");\r\n    }\r\n\r\n    /**\r\n     * 和componentDidMount一樣，這個函數被強烈建議把「更新後想做的事情」放在這裡，\r\n     * 包括先前提過的fetch等。因為這個函數是唯一也是最後在DOM真的被更新後執行的週期函數\r\n     */\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\" >>> MyComponentLifecycle4 componentDidUpdate <<< \");\r\n        console.log(\" >>> MyComponentLifecycle4 componentDidUpdate prevProps <<< \", prevProps);\r\n        console.log(\" >>> MyComponentLifecycle4 componentDidUpdate prevState <<< \", prevState);\r\n        console.log(\" >>> MyComponentLifecycle4 componentDidUpdate snapshot <<< \", snapshot);\r\n        // ------------------------------------------------------------------------------------------\r\n        \r\n    }\r\n\r\n    /**\r\n     * 這個函數的功用像是守門員，用來做確認是不是真的要update。這個函數要return一個布林值。\r\n     * 當函數回傳false時，元件就不會更新，也不會繼續執行接下來的render()以及剩下的update生命週期函數。預設會回傳true。\r\n     */\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\" >>> MyComponentLifecycle4 shouldComponentUpdate <<< \");\r\n        console.log(\" >>> MyComponentLifecycle4 shouldComponentUpdate nextProps <<< \", nextProps);\r\n        console.log(\" >>> MyComponentLifecycle4 shouldComponentUpdate nextState <<< \", nextState);\r\n        return true; // 不override的話預設是true\r\n    }\r\n\r\n    doRotate() {\r\n\r\n        this.setState((state, props) => {\r\n            // console.log(\"state >>> \" , state);\r\n            // console.log(\"props >>> \" , props);\r\n\r\n            let angAfterRotate = state.rotateAng + 90;\r\n            if (angAfterRotate >= 360){\r\n                angAfterRotate -= 360;\r\n            }\r\n\r\n            return {\r\n                rotateAng: angAfterRotate\r\n            }\r\n        });\r\n\r\n        console.log(\"this.state.rotateAng : \", this.state.rotateAng);\r\n    }\r\n\r\n    inputChangedHandler(e){\r\n\r\n        if(e.target.value === ''){\r\n            e.target.value = 0;\r\n        }\r\n\r\n        let angAfterRotate = parseInt(e.target.value);\r\n        this.setState((state, props) => {\r\n            // console.log(\"state >>> \" , state);\r\n            // console.log(\"props >>> \" , props);\r\n            \r\n            if (angAfterRotate >= 360){\r\n                angAfterRotate = 360;\r\n            }\r\n\r\n            return {\r\n                rotateAng: angAfterRotate\r\n            }\r\n        });\r\n    }\r\n\r\n    doRotateRangeBar(e){\r\n        let angAfterRotate = parseInt(e.target.value);\r\n        this.setState((state, props) => {\r\n            // console.log(\"state >>> \" , state);\r\n            // console.log(\"props >>> \" , props);\r\n            \r\n            if (angAfterRotate >= 360){\r\n                angAfterRotate = 360;\r\n            }\r\n\r\n            return {\r\n                rotateAng: angAfterRotate\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ margin: \"2cm\" }}>\r\n                <h1>MyComponentLifecycle4</h1>\r\n                <input type=\"text\" className=\"shortInput\"\r\n                    value={ this.state.rotateAng }\r\n                    onChange={ (e) => this.inputChangedHandler(e) } /> deg\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={ this.doRotate } style={{ marginLeft: \"5px\" }}>順時轉90度</button>\r\n                <br/><br/>\r\n                <input type=\"range\" min=\"0\" max=\"360\" value={ this.state.rotateAng } step=\"1\" onChange={ (e) => this.doRotateRangeBar(e) }/>\r\n                <br/><br/>\r\n                <img src={require('../../assets/img/卡通林克.png')} alt=\"卡通林克.png\"\r\n                    width=\"200\" className=\"rotate\" style={{ \"--deg\": this.state.rotateAng + \"deg\" }} ></img>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nconst MyComponentLifecycle5 = (props) => {\r\n\r\n    let timer1 = null;\r\n    //-------------------------------------------------\r\n    const [salary, setSalary] = useState(23000);\r\n    const [nowDateTime, setNowDateTime] = useState(null);\r\n    //-------------------------------------------------\r\n\r\n    useEffect(() => {\r\n        /* 下面是 componentDidMount 和  componentDidUpdate */\r\n        checkSalary(\"我在componentDidMount觸發\");\r\n        getNowDateTime();\r\n        /* 上面是 componentDidMount 和  componentDidUpdate */\r\n\r\n        return () => {\r\n            /* 下面是 componentWillUnmount */\r\n            checkSalary(\"我在componentWillUnmount觸發\");\r\n\r\n            // 若不取消註冊\r\n            // memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\r\n            clearInterval(timer1);\r\n            /* 上面是 componentWillUnmount */\r\n        };\r\n\r\n    }, [salary /*, nowDateTime*/]); /* 加入監控的變數, i.e. 第二個參數是用來限定當哪些變數被改變時 useEffect 要觸發 */\r\n\r\n    const checkSalary = (msg) => {\r\n        console.log(` === ${msg} - MyComponentLifecycle5.checkSalary === `);\r\n    }\r\n\r\n    const doChangeSalary = (e) => {\r\n        let salary = parseInt(e.target.value);\r\n\r\n        if (salary === parseInt(e.target.min) || salary === parseInt(e.target.max)) {\r\n            setSalary(salary);\r\n            return;\r\n        }\r\n\r\n        salary += parseInt(e.target.step);\r\n        setSalary(salary);\r\n    }\r\n\r\n    const getNowDateTime = function () {\r\n        timer1 = setInterval(() => {\r\n            let today = new Date();\r\n            let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n            let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            // this.setState({ nowDateTime: date + ' ' + time });\r\n            setNowDateTime(date + ' ' + time);\r\n        }, 1000);\r\n    }\r\n\r\n    return (\r\n        <div style={{ border: \"3px solid white\" }} className=\"my-margin\">\r\n            <h1>MyComponentLifecycle5</h1>\r\n            <p>測試 useEffect</p>\r\n            <p>可把第27行的salary拔掉，會發現不會觸發useState</p>\r\n            <p>{nowDateTime}</p>\r\n            <input type=\"text\" style={{ width: \"20%\" }} value={salary} readOnly={true} /><br />\r\n            <input type=\"range\" min=\"22000\" max=\"55000\" step=\"100\" defaultValue={salary} onChange={(e) => doChangeSalary(e)} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MyComponentLifecycle5;","/**\r\n * named export（具名匯出）：可匯獨立的物件、變數、函式等等，匯出前必須給予特定名稱，而匯入時也必須使用相同的名稱。另外，一個檔案中可以有多個 named export。\r\n * default export（預設匯出）：一個檔案僅能有唯一的 default export，而此類型不需要給予名稱。\r\n*/\r\n\r\nimport { EventEmitter } from 'events';\r\nexport default new EventEmitter();","import React from 'react';\r\nimport emitter from '../../utils/events';\r\n\r\nexport default class ChildA extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"isShowPic\" : !props.empData.isShowPic,\r\n            \"msgObjFromChildB\": undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 元件裝載完成以後宣告一個自定義事件\r\n        this.eventEmitter = emitter.addListener('changeMessageFromChildB', (messageObj) => {\r\n            alert(messageObj.message);\r\n            console.log(\"ChildA收到的 messageObj is:\", messageObj);\r\n\r\n            this.setState({\r\n                \"isShowPic\" : this.state.isShowPic,\r\n                \"msgObjFromChildB\": messageObj\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        emitter.removeListener(this.eventEmitter);\r\n    }\r\n\r\n\r\n    handlerEmitToParent = (e) => {\r\n        // emitToParent : 父元件 透過 props 往 子元件 binding的函式\r\n        \r\n        this.setState({\r\n            \"isShowPic\" : !this.state.isShowPic\r\n        })\r\n\r\n        this.props.emitToParent({\r\n            \"MSG\": \"我是要向Parent送的資料\",\r\n            \"isShowPic\" : this.state.isShowPic\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={ 'my-margin' } style={ { border: \"3px solid pink\" } }>\r\n                <h1>我是ChildA</h1>\r\n                <table className=\"table table-striped table-hover\" border=\"3\">\r\n                    <tbody>\r\n                        <tr className=\"table-primary\">\r\n                            <td>父元件透過props傳遞給子元件的資料</td>\r\n                            <td>{ JSON.stringify(this.props.empData) }</td>\r\n                        </tr>                        \r\n                        <tr className=\"table-primary\">\r\n                            <td>子元件向父元件通訊</td>\r\n                            <td>\r\n                                <button type=\"button\" onClick={ this.handlerEmitToParent }>向Parent傳資料</button>\r\n                            </td>\r\n                        </tr>                        \r\n                        <tr className=\"table-info\">\r\n                            <td>ChildB 向 ChildA傳遞資料(使用 EventEmitter)</td>\r\n                            <td>\r\n                                { JSON.stringify(this.state.msgObjFromChildB) }\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport emitter from '../../utils/events';\r\n\r\nexport default class ChildB extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"message\": \"\"\r\n        }\r\n    }\r\n\r\n    changeSiblingChildA = (e, _msg) => {\r\n        alert(`ChildB changeSiblingChildA, emit事件給 ChildA 的 EventListener : ${_msg}`);\r\n        console.log(\"changeSiblingChildA e is : \", e);\r\n        let msgObj = { \"message\": _msg, \"other-info\": \"哈哈哈\" }\r\n        emitter.emit('changeMessageFromChildB'/*ChildA中ComponentDidMound訂閱的事件*/, msgObj);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'my-margin'} style={{ border: \"3px solid lightgreen\" }}>\r\n                <h1>我是ChildB</h1>\r\n                <pre style={ {color: \"white\"} }>\r\n                    { JSON.stringify( this.state.message  ) }\r\n                </pre>\r\n                <input type=\"text\" placeholder=\"發送給ChildA的訊息\" onKeyUp={ (e) => this.setState({ \"message\": e.target.value }) }/>\r\n                <button type=\"button\" className=\"btn btn-outline-info my-margin\" onClick={ (e) => this.changeSiblingChildA(e, this.state.message) }>使用Events向ChildA傳資料</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport ChildA from './ChildA';\r\nimport ChildB from './ChildB';\r\n\r\nimport lianyu from \"../../assets/img/煉獄大哥.png\";\r\n\r\nexport default class Parent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \"empName\": \"Roger\",\r\n            \"empAge\": 31,\r\n            \"empSalary\": 52000,\r\n            \"isShowPic\" : false\r\n        }\r\n    }\r\n\r\n    handleChildEmitData = (dataFromChild) => {\r\n        console.log(\"dataFromChild\", dataFromChild);\r\n        this.setState({\r\n            \"empName\": this.state.empName,\r\n            \"empAge\": this.state.empAge,\r\n            \"empSalary\": this.state.empSalary,\r\n            \"isShowPic\" : dataFromChild.isShowPic\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'my-margin'} style={ { border: \"3px solid yellow\" } }>\r\n                <h1>我是Parent</h1>\r\n\r\n                { this.state.isShowPic == true ? <img src={lianyu} alt=\"煉獄大哥.png\" style={{ width: \"5cm\" }} /> : \"\" }\r\n                \r\n\r\n                <ChildA empData={ this.state } emitToParent={ this.handleChildEmitData } />\r\n                <ChildB/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport './MyComponentOOXX.css';\r\n\r\nclass Square extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        // ---------------------------------------\r\n        let squareIndex = props.passFromParentVal;\r\n        // ---------------------------------------\r\n        this.state = {\r\n            icon: \"\",\r\n            squareIndex: squareIndex\r\n        }\r\n        // ---------------------------------------\r\n        this.doClick = this.doClick.bind(this);\r\n    }\r\n\r\n    doClick = () => {\r\n        // alert( this.props.passFromParentVal );\r\n        console.log(\"從父層送來的資料：this.props.iconToChange >>> \", this.props.iconToChange);\r\n        this.setState({ icon: this.props.iconToChange });\r\n        this.props.handleClickFromParent(this.state.squareIndex/*往parentComponent送的參數*/);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"square\" \r\n                 onClick={ this.doClick } \r\n                //  onClick={ (e) => this.props.handleClickFromParent(\"30678\"/*往parentComponent送的參數*/) } \r\n                 style={{ textAlign: \"center\", color: \"red\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                 {/* { this.props.passFromParentVal } */}\r\n                 { this.state.icon }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class Board extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPlayer: \"O\", \r\n            nextPlayer: \"X\",\r\n            squareStatus : Array(9).fill(\"\")\r\n        }\r\n        // ---------------------------------\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    \r\n    handleClick = (_valFromChild) => {\r\n        console.log(\"從子層送來的資料：clickHandeler _valFromChild\", _valFromChild);\r\n\r\n        let squareIndexFromChild = _valFromChild;\r\n        this.state.squareStatus[squareIndexFromChild] = this.state.currentPlayer; // O 或 x\r\n\r\n        this.setState({\r\n            currentPlayer : this.state.currentPlayer === 'O' ? 'X' : 'O',\r\n            squareStatus: this.state.squareStatus\r\n        });\r\n\r\n        console.log(\"%c After handleClick , this state is :\", 'color:red', this.state);\r\n    }\r\n\r\n    render(){\r\n        let edgeLength = 9;\r\n        return (\r\n            <div style={{ marginBottom: \"3cm\"}}> \r\n                <h2>OOXX遊戲</h2>\r\n                <p>官網教學: https://zh-hant.reactjs.org/tutorial/tutorial.html</p>\r\n                <h3>Now player: { this.state.currentPlayer }</h3>\r\n                <h3>Next player: { this.state.currentPlayer === 'O' ? 'X' : 'O' }</h3>\r\n                <br></br>\r\n                <div className=\"board-row\" style={{display: \"table\", margin: \"0 auto\", height: `${edgeLength}cm`, width: `${edgeLength}cm` }}>\r\n                    <Square passFromParentVal=\"0\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                    <Square passFromParentVal=\"1\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                    <Square passFromParentVal=\"2\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                    <br/>\r\n                    <Square passFromParentVal=\"3\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                    <Square passFromParentVal=\"4\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                    <Square passFromParentVal=\"5\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                    <br/>\r\n                    <Square passFromParentVal=\"6\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                    <Square passFromParentVal=\"7\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                    <Square passFromParentVal=\"8\" iconToChange={ this.state.currentPlayer } handleClickFromParent={ (valFromChild) => { this.handleClick(valFromChild) } }/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class ProgressDIY extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rateVal: 30\r\n        }\r\n        // ---------------------\r\n        this.timerIdIncrease = null;\r\n        this.timerIddecrease = null;\r\n        // ---------------------\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ( (prevState.rateVal >= this.state.rateVal )){\r\n            if(this.timerIdIncrease){\r\n                clearTimeout(this.timerIdIncrease);\r\n                // this.decreaseRate(30);\r\n            }\r\n        } else if(prevState.rateVal <= this.state.rateVal){\r\n            if(this.timerIddecrease){\r\n                clearTimeout(this.timerIddecrease);\r\n                // this.increaseRate(90);\r\n            }\r\n        }\r\n    }\r\n\r\n    increaseRate = (_targetRate) => {\r\n        // alert(_targetRate);\r\n        const percent = this.state.rateVal + 1;\r\n        if (percent > _targetRate) return;\r\n\r\n        this.setState({ /*rateVal: _targetRate*/ rateVal: percent },\r\n            () => {\r\n                if (parseInt(this.state.rateVal) >= parseInt(_targetRate)) {\r\n                    return;\r\n                }\r\n                this.timerIdIncrease = setTimeout(() => { this.increaseRate(_targetRate) }, 20);\r\n            }\r\n        );\r\n    }\r\n\r\n    decreaseRate = (_targetRate) => {\r\n        // alert(_targetRate);\r\n        const percent = this.state.rateVal - 1;\r\n\r\n        if (percent < _targetRate) return;\r\n\r\n        this.setState({ /*rateVal: _targetRate*/ rateVal: percent },\r\n            () => {\r\n                if (parseInt(this.state.rateVal) <= parseInt(_targetRate)) {\r\n                    return;\r\n                }\r\n                this.timerIddecrease = setTimeout(() => { this.decreaseRate(_targetRate) }, 20);\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>ProgressDIY</h1>\r\n                <input type=\"text\" value={this.state.rateVal} readOnly/>\r\n                <div style={{ border: '3px solid white' }}>\r\n                    <button type=\"button\" myrate=\"90\" onClick={(e) => this.increaseRate(e.target.getAttribute(\"myrate\"))}>增加比率至90</button>\r\n                    <button type=\"button\" myrate=\"30\" onClick={(e) => this.decreaseRate(e.target.getAttribute(\"myrate\"))}>減少比率至30</button>\r\n                    <div className=\"progress-back my-margin\" style={{ backgroundColor: \"rgba(0,0,0,0.2)\", width: \"200px\", height: \"7px\", borderRadius: \"10px\" }}>\r\n                        <div\r\n                            style={{\r\n                                backgroundColor: \"#fe5196\",\r\n                                width: this.state.rateVal + '%',\r\n                                height: \"100%\",\r\n                                borderRadius: \"10px\"\r\n                            }}>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\nimport \"./MyProductList.css\"\r\n\r\nexport default class MyProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [\r\n                { \"pId\": \"7001\", \"name\": \"薩爾達傳說\", \"price\": \"1750\", \"inventory\": \"22\" },\r\n                { \"pId\": \"7002\", \"name\": \"草泥馬足球\", \"price\": \"980\" , \"inventory\": \"120\" },\r\n                { \"pId\": \"7003\", \"name\": \"馬力歐派對\", \"price\": \"1200\", \"inventory\": \"77\" },\r\n            ],\r\n            inputObj: {\r\n                \"pId\": \"\",\r\n                \"name\": \"\",\r\n                \"price\": 0,\r\n                \"inventory\": 0,\r\n            },\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        // alert(`MyProductList - componentDidMount`);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        //alert(`MyProductList - componentDidUpdate`);\r\n        console.log(`MyProductList - componentDidUpdate`);\r\n    }\r\n\r\n    doDelete = (_pId) => {\r\n        // alert(`doDelete - ${_pId}`);\r\n        if (window.confirm(`確定刪除商品編號：${_pId}嗎？`) == false) {\r\n            return;\r\n        }\r\n\r\n        let productsAfterRemoved = this.state.products.filter(prodVO => {\r\n            return _pId != prodVO.pId;\r\n        });\r\n        console.log(\"productsAfterRemoved >>>\", productsAfterRemoved);\r\n        this.setState({\r\n            products: productsAfterRemoved\r\n        })\r\n    }\r\n\r\n    doInsert = () => {\r\n        alert(`doInsert`);\r\n        console.log(`doInsert 時, this.state.inputObj is:`, this.state.inputObj);\r\n\r\n        // 模擬新增\r\n        this.setState({\r\n            products: [...this.state.products/*既有的解構*/, this.state.inputObj /*塞入要新增的資料*/]\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let key = event.target.name;\r\n        // console.log(\"handleChange >>> event.target.value is: \", event.target.value);\r\n\r\n        // console.log(\"...this.state.products.map(vo => vo.pId) = \" , ...this.state.products.map(vo => vo.pId));\r\n        let maxProdId = Math.max(...this.state.products.map(vo => vo.pId))\r\n        console.log(\"maxProdId = \", maxProdId);\r\n\r\n        switch (key) {\r\n            case \"name\":\r\n                this.setState({\r\n                    inputObj: {\r\n                        \"pId\": maxProdId + 1,\r\n                        \"name\": event.target.value,\r\n                        \"price\": this.state.inputObj.price,\r\n                        \"inventory\": this.state.inputObj.inventory\r\n                    }\r\n                });\r\n                break;\r\n            case \"price\":\r\n                this.setState({\r\n                    inputObj: {\r\n                        \"pId\": maxProdId + 1,\r\n                        \"name\": this.state.inputObj.name,\r\n                        \"price\": event.target.value,\r\n                        \"inventory\": this.state.inputObj.inventory\r\n                    }\r\n                });\r\n                break;\r\n            case \"inventory\":\r\n                this.setState({\r\n                    inputObj: {\r\n                        \"pId\": maxProdId + 1,\r\n                        \"name\": this.state.inputObj.name,\r\n                        \"price\": this.state.inputObj.price,\r\n                        \"inventory\": event.target.value\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <textarea value={ JSON.stringify(this.state) } cols=\"70\" rows=\"5\" readOnly></textarea>\r\n                <h1>我是MyProductList</h1>\r\n\r\n                <input type=\"text\" placeholder=\"輸入商品名稱\" name=\"name\" onChange={this.handleChange} /> <br />\r\n                <input type=\"text\" placeholder=\"輸入商品售價\" name=\"price\" onChange={this.handleChange} /> <br />\r\n                <input type=\"text\" placeholder=\"輸入商品庫存\" name=\"inventory\" onChange={this.handleChange} /> <br />\r\n                <button type=\"button\"\r\n                    className=\"btn btn-outline-primary my-margin\"\r\n                    style={{ width: \"8cm\" }}\r\n                    onClick={() => this.doInsert()}>新增</button>\r\n\r\n                <table className=\"table table-hover table-grid\">\r\n                    <thead>\r\n                        <tr className=\"table-success\">\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">商品編號</th>\r\n                            <th scope=\"col\">商品名稱</th>\r\n                            <th scope=\"col\">售價</th>\r\n                            <th scope=\"col\">庫存</th>\r\n                            <th scope=\"col\">操作</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table-light\">\r\n                        {\r\n                            this.state.products.map((prodVO, index) => {\r\n                                return (\r\n                                    <tr key={prodVO.pId}>\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td>{prodVO.pId}</td>\r\n                                        <td>{prodVO.name}</td>\r\n                                        <td>{prodVO.price} NT</td>\r\n                                        <td>{prodVO.inventory}</td>\r\n                                        <td>\r\n                                            <button type=\"button\"\r\n                                                className=\"btn btn-outline-danger\"\r\n                                                style={{ borderRadius: \"7px\" }}\r\n                                                onClick={() => this.doDelete(prodVO.pId)}>刪除</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class About extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <h1>我是About元件</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport { Prompt } from 'react-router-dom';\r\n\r\nexport default class UserInfo extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"UserInfo.componentDidMount() => this.props.match >>>\", this.props.match);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        {/* when為true時表示阻止默認的跳轉行為 */}\r\n        <Prompt when={true} message='確認離開此頁面 FUCK？(使用 Prompt )'/>\r\n\r\n        <h1>我是UserInfo元件</h1><span>傳入的路由參數: { JSON.stringify(this.props.match) }</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport default class NoMatch extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <h1>無批配此url的Component(萬用路由)</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport './RouterView.css'\r\n\r\nimport About from './About'\r\nimport UserInfo from './UserInfo'\r\nimport NoMatch from './NoMatch'\r\n\r\n// 路由\r\n// import { HashRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport { BrowserRouter, HashRouter, Route, Link, Switch, Redirect, NavLink, withRouter } from 'react-router-dom';\r\n\r\n//export default class RouterView extends React.Component {\r\nclass RouterView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * 產生亂數，不足四位左側補0\r\n     */\r\n    generateRandomNumber = () => {\r\n        return (Math.floor(Math.random() * 10000) + 1).toString().padStart(4, 0);\r\n    }\r\n\r\n    doNavigateToPage = () => {\r\n        alert(` === dokNavigateToPage 編程式導頁 === `);\r\n        this.props.history.push(\"/userInfo/7788\");\r\n    }\r\n\r\n    render() {\r\n\r\n        let randNum = this.generateRandomNumber();\r\n\r\n        return (\r\n            <HashRouter>\r\n                <div style={{ marginBottom: \"3cm\" }}>\r\n                    <ul>\r\n                        <li>\r\n                            {/* <Link to=\"/about/\">路由：About元件</Link> */}\r\n                            <NavLink to=\"/about/\" activeClassName=\"selected\">路由：About元件</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            {/* <Link to=\"/GG919\">路由重定向：將 /GG919，Redirect 到 /about</Link> */}\r\n                            <NavLink to=\"/GG919/\" activeClassName=\"selected\">路由重定向：將 /GG919，Redirect 到 /about</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            {/* <Link to=\"/userInfo/\">路由：UserInfo元件</Link> */}\r\n                            <NavLink to=\"/userInfo/\" activeClassName=\"selected\">路由：UserInfo元件</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            {/* <Link to=\"/userInfo/5566\">路由：UserInfo元件(UserId: 5566)</Link> */}\r\n                            <NavLink to=\"/userInfo/5566\" activeClassName=\"selected\">路由：UserInfo元件(UserId: 5566)</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            {/* <Link to={\"/userInfo/\" + randNum}>路由：UserInfo元件(UserId亂數: {randNum})</Link> */}\r\n                            <NavLink to={`/userInfo/${randNum}`} activeStyle={{ color: \"red\" }}>路由：UserInfo元件(UserId亂數: {randNum})</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <button type=\"button\" className=\"btn btn-outline-info\" onClick={(e) => this.doNavigateToPage(e)}>編程式跳頁：UserInfo元件(UserId亂數: {randNum})</button>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    {/* ※ 改完路由要進行重起才會生效 */}\r\n                    {/* 不使用<Switch>包裹的情况下，每一个被location匹配到的<Route>将都会被渲染 */}\r\n                    <Switch>\r\n                        <Route path=\"/about\" component={About} />\r\n                        <Route path=\"/userInfo\" component={UserInfo} exact={true} />{/* exact: 是否精準匹配, 若此處不加exact, 則帶參數的URL會被此路由攔截到, 便無法取得參數 */}\r\n                        <Route path=\"/userInfo/:userId\" component={UserInfo} />\r\n\r\n                        {/* Redirect: 路由重定向：將 /GG919，Redirect 到 /about */}\r\n                        <Redirect from='/GG919' to='/about' />\r\n                        {/* 萬用路由 */}\r\n                        <Route component={NoMatch} />\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(RouterView);","import React, { useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport MyProgressBar from './my-components/MyProgressBar/MyProgressBar.js'\r\nimport MyComponent from \"./my-components/MyComponent/MyComponent.js\";\r\nimport MyComponentUseClass from \"./my-components/MyComponentUseClass/MyComponentUseClass.js\";\r\nimport MyComponentWithUseState from \"./my-components/MyComponentWithUseState/MyComponentWithUseState.js\";\r\nimport MyHttpApiComponent from \"./my-components/MyHttpApiComponent/MyHttpApiComponent.js\";\r\nimport MyComponentLifecycle from \"./my-components/MyComponentLifecycle/MyComponentLifecycle.js\";\r\nimport MyComponentLifecycle2 from \"./my-components/MyComponentLifecycle/MyComponentLifecycle2.js\";\r\nimport MyComponentLifecycle3 from \"./my-components/MyComponentLifecycle/MyComponentLifecycle3.js\";\r\nimport MyComponentLifecycle4 from \"./my-components/MyComponentLifecycle/MyComponentLifecycle4.js\";\r\nimport MyComponentLifecycle5 from \"./my-components/MyComponentLifecycle/MyComponentLifecycle5.js\";\r\n\r\nimport Parent from './my-components/ComponentCommunicate/Parent.js'\r\n\r\nimport Board from \"./my-components/MyComponentOOXX/Board.js\";\r\n\r\nimport ProgressDIY from \"./my-components/ComponentProgressDIY/ProgressDIY.js\"\r\n\r\nimport MyProductList from \"./my-components/ProductListComponent/MyProductList\"\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport RouterView from \"./my-components/MyRouterTestComponent/RouterView\"\r\n\r\nconst myStyle = { color: 'orange', fontSize: '40px' }\r\n\r\nlet doLogConsole1 = (event) => {\r\n  console.log(\"%c doLogConsole1: event is : %s\", 'color:pink', event);\r\n  console.log(\"%c doLogConsole1: event.target.value : %s\", 'color:pink', event.target.value);\r\n}\r\nlet doLogConsole2 = (event) => {\r\n  console.log(\"%c doLogConsole2: event is : %s\", 'color:lightgreen', event);\r\n  console.log(\"%c doLogConsole2: event.target.value : %s\", 'color:lightgreen', event.target.value);\r\n}\r\n\r\n// 「{ { } }」，外面那層括號代表裡面是javascript語法，裡面的括號表示物件型態\r\nconst myMultiButton = () => {\r\n  let btnArr = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    // btnArr.push(<button type=\"button\" value={i} onClick={ doLogConsole1 }>我是第{i}個按鈕</button>);\r\n    btnArr.push(<button type=\"button\" key={i} value={i} onClick={(e) => { doLogConsole1(e); doLogConsole2(e); }}>我是第{i}個按鈕</button>);\r\n  }\r\n  return btnArr;\r\n}\r\n\r\nconst printMessage = () => {\r\n  document.querySelector(\"#show-area\").value = \"我被按到了！\"\r\n}\r\n\r\nfunction App(props) {\r\n\r\n  const [isEnter, setIsEnter] = useState(true);\r\n  const [isShowComponent5, setIsShowComponent5] = useState(true);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h2 style={myStyle}>Hello World!</h2>\r\n\r\n        {/* 用{}包裹, 才會是int、boolean型態 */}\r\n        <MyProgressBar />\r\n\r\n        <br />\r\n        {myMultiButton()}\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n        <MyComponent myName=\"父元件往子元件傳的值\" myNumber={87} getData={true} handleClick={printMessage} />\r\n\r\n        <p>Edit <code>src/App.js</code> and save to reload.</p>\r\n        <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\" >Learn React</a>\r\n\r\n        <input type=\"text\" id=\"show-area\" style={{ border: '5px solid orange', height: '1cm', margin: '1cm', width: '15cm' }} placeholder=\"測試綁定函式 - 子元件click後, 父元件異動\"></input>\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n\r\n        <MyComponent>\r\n          在「元件標籤」中設定的children文字\r\n        </MyComponent>\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <MyComponentUseClass myName={'父元件往子元件傳的值'} />\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <MyComponentWithUseState myName={'父元件往子元件傳的值'} />\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <MyHttpApiComponent />\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <MyComponentLifecycle myName=\"大雄\" />\r\n        <MyComponentLifecycle myName=\"靜香\" />\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <MyComponentLifecycle2 />\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n\r\n        <div style={{ margin: '2cm' }}>\r\n          <button type=\"button\" onClick={(e) => { setIsEnter(!isEnter) }}>\r\n            {(isEnter === true) ? \"我又進來啦(MyComponentLifecycle3)\" : \"我又出去啦(MyComponentLifecycle3)\"}\r\n          </button>\r\n          {isEnter === true ? <MyComponentLifecycle3 /> : null}\r\n        </div>\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <MyComponentLifecycle4/>\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-info my-margin\" \r\n          onClick={(e) => { setIsShowComponent5(!isShowComponent5) }}>\r\n            顯示Component5\r\n        </button>\r\n        { isShowComponent5 == true ? <MyComponentLifecycle5/> : '' }\r\n        \r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <Board/>\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <Parent/>\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <ProgressDIY/>\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <MyProductList/>\r\n\r\n        <hr style={{ height: '1px', borderTop: '2px solid red', width: '100%' }} />\r\n        <RouterView/>\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter, HashRouter, Route } from 'react-router-dom'\r\n\r\n\r\n/**\r\n * 原本長這樣\r\n */\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App/>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n/**\r\n * 因為RouterView中使用 withRouter 時，報錯 You should not use <Route> or withRouter() outside a <Router>\r\n * ref. https://blog.csdn.net/Jane_96/article/details/84754823?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param\r\n */\r\nReactDOM.render(\r\n  (\r\n    <HashRouter>\r\n      <Route path=\"/\" component={App}></Route>\r\n    </HashRouter>\r\n  ),\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}